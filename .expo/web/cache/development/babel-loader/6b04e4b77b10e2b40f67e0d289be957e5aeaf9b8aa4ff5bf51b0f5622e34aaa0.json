{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport React, { useState } from \"react\";\nimport { COLORS, SIZES } from \"../constants\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport TutorItem from \"../components/Tutor/TutorItem\";\nimport useFetch from \"../hook/Tutor/useFetch\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tutor = function Tutor() {\n  var navigation = useNavigation();\n  var _useFetch = useFetch(),\n    data = _useFetch.data,\n    isLoading = _useFetch.isLoading,\n    error = _useFetch.error;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    refreshing = _useState2[0],\n    setRefreshing = _useState2[1];\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    setTimeout(function () {\n      setRefreshing(false);\n    }, 5000);\n  }, []);\n  return _jsxs(View, {\n    styles: styles.container,\n    children: [_jsx(View, {\n      style: styles.wrapper,\n      children: _jsxs(View, {\n        style: styles.upperRow,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(Ionicons, {\n            name: \"chevron-back-circle\",\n            size: 40,\n            color: COLORS.lightWhite\n          })\n        }), _jsx(Text, {\n          style: styles.heading,\n          children: \"Best Tutors\"\n        })]\n      })\n    }), _jsx(View, {\n      style: {\n        marginTop: 80,\n        marginHorizontal: 15,\n        marginBottom: 60\n      },\n      children: _jsx(View, {\n        children: isLoading ? _jsx(ActivityIndicator, {\n          size: SIZES.xxLarge,\n          color: COLORS.primarys\n        }) : error ? _jsx(Text, {\n          children: \"Something went wrong \"\n        }) : _jsx(FlatList, {\n          refreshing: refreshing,\n          onRefresh: onRefresh,\n          style: {\n            marginBottom: 40\n          },\n          data: data.data,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsx(TutorItem, {\n              item: item\n            });\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          }\n        })\n      })\n    })]\n  });\n};\nexport default Tutor;\nvar styles = StyleSheet.create({\n  heading: {\n    fontFamily: \"semibold\",\n    fontSize: SIZES.medium,\n    color: COLORS.lightWhite,\n    marginLeft: 5\n  },\n  upperRow: {\n    width: SIZES.width - 50,\n    marginHorizontal: SIZES.large,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    backgroundColor: COLORS.primary,\n    borderRadius: SIZES.large,\n    top: SIZES.large,\n    zIndex: 999\n  },\n  wrapper: {\n    marginTop: 30,\n    flex: 1,\n    backgroundColor: COLORS.lightWhite\n  },\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.lightWhite\n  }\n});","map":{"version":3,"names":["React","useState","COLORS","SIZES","Ionicons","useNavigation","TutorItem","useFetch","jsx","_jsx","jsxs","_jsxs","Tutor","navigation","_useFetch","data","isLoading","error","_useState","_useState2","_slicedToArray","refreshing","setRefreshing","onRefresh","useCallback","setTimeout","View","styles","container","children","style","wrapper","upperRow","TouchableOpacity","onPress","goBack","name","size","color","lightWhite","Text","heading","marginTop","marginHorizontal","marginBottom","ActivityIndicator","xxLarge","primarys","FlatList","renderItem","_ref","item","keyExtractor","id","StyleSheet","create","fontFamily","fontSize","medium","marginLeft","width","large","flexDirection","alignItems","position","backgroundColor","primary","borderRadius","top","zIndex","flex"],"sources":["D:/Captone_projcet/ReactNative/FA23/TutorCenter/screens/Tutor.jsx"],"sourcesContent":["import {\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  ScrollView,\r\n  ActivityIndicator,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { COLORS, SIZES } from \"../constants\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport TutorItem from \"../components/Tutor/TutorItem\";\r\nimport useFetch from \"../hook/Tutor/useFetch\";\r\n\r\nconst Tutor = () => {\r\n  const navigation = useNavigation();\r\n  const { data, isLoading, error } = useFetch();\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const onRefresh = React.useCallback(() => {\r\n    setRefreshing(true);\r\n    setTimeout(() => {\r\n      setRefreshing(false);\r\n    }, 5000);\r\n  }, []);\r\n  return (\r\n    <View styles={styles.container}>\r\n      <View style={styles.wrapper}>\r\n        <View style={styles.upperRow}>\r\n          <TouchableOpacity onPress={() => navigation.goBack()}>\r\n            <Ionicons\r\n              name=\"chevron-back-circle\"\r\n              size={40}\r\n              color={COLORS.lightWhite}\r\n            />\r\n          </TouchableOpacity>\r\n          <Text style={styles.heading}>Best Tutors</Text>\r\n        </View>\r\n      </View>\r\n      <View style={{ marginTop: 80, marginHorizontal: 15, marginBottom: 60 }}>\r\n        <View>\r\n          {isLoading ? (\r\n            <ActivityIndicator size={SIZES.xxLarge} color={COLORS.primarys} />\r\n          ) : error ? (\r\n            <Text>Something went wrong </Text>\r\n          ) : (\r\n            <FlatList\r\n              refreshing={refreshing}\r\n              onRefresh={onRefresh}\r\n              style={{ marginBottom: 40 }}\r\n              data={data.data}\r\n              renderItem={({ item }) => <TutorItem item={item} />}\r\n              keyExtractor={(item) => item.id}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Tutor;\r\n\r\nconst styles = StyleSheet.create({\r\n  heading: {\r\n    fontFamily: \"semibold\",\r\n    fontSize: SIZES.medium,\r\n    color: COLORS.lightWhite,\r\n    marginLeft: 5,\r\n  },\r\n\r\n  upperRow: {\r\n    width: SIZES.width - 50,\r\n    marginHorizontal: SIZES.large,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    backgroundColor: COLORS.primary,\r\n    borderRadius: SIZES.large,\r\n    top: SIZES.large,\r\n    zIndex: 999,\r\n  },\r\n\r\n  wrapper: {\r\n    marginTop: 30,\r\n    flex: 1,\r\n    backgroundColor: COLORS.lightWhite,\r\n  },\r\n\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.lightWhite,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}